<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jeff Stagg</title>
    <link>https://jeffstagg.github.io/posts/</link>
    <description>Recent content in Posts on Jeff Stagg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 04 Sep 2022 00:00:00 -0500</lastBuildDate><atom:link href="https://jeffstagg.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introducing the Over-Engineered Resume</title>
      <link>https://jeffstagg.github.io/posts/220904-over-engineered-resume/</link>
      <pubDate>Sun, 04 Sep 2022 00:00:00 -0500</pubDate>
      
      <guid>https://jeffstagg.github.io/posts/220904-over-engineered-resume/</guid>
      <description>Introducing the Over-Engineered Resume A common question that comes up when a developer is fresh out of college and looking for experience is, &amp;ldquo;How can I show off a project when I haven&amp;rsquo;t done anything outside of school?&amp;rdquo; It&amp;rsquo;s a valid question, and one that we all had to face at one point. How do you get that first bit of experience to get you going?
The First Project Everyone needs a &amp;ldquo;first&amp;rdquo; project.</description>
      <content>&lt;h1 id=&#34;introducing-the-over-engineered-resume&#34;&gt;Introducing the Over-Engineered Resume&lt;/h1&gt;
&lt;p&gt;A common question that comes up when a developer is fresh out of college and looking for experience is, &amp;ldquo;How can I show off a project when I haven&amp;rsquo;t done anything outside of school?&amp;rdquo;
It&amp;rsquo;s a valid question, and one that we all had to face at one point. How do you get that first bit of experience to get you going?&lt;/p&gt;
&lt;h2 id=&#34;the-first-project&#34;&gt;The First Project&lt;/h2&gt;
&lt;p&gt;Everyone needs a &amp;ldquo;first&amp;rdquo; project. Something you can dive into, learn new things with, and something to show off your coding style. Or build one, if you&amp;rsquo;re new to programming. My first project was a portfolio. I wanted something to show off the work that I would eventually do, and I needed something to put on github (it seemed really important to me at the time).&lt;/p&gt;
&lt;p&gt;So, a decade later, I still recommend people build their own portfolio or resume. It&amp;rsquo;s a useful project to have, and I can&amp;rsquo;t count the amount of interviews I&amp;rsquo;ve been in where the team really doesn&amp;rsquo;t know how to gauge a developer to see how they would work with their team, so it&amp;rsquo;s helpful to have something to dive into with a development team.&lt;/p&gt;
&lt;h2 id=&#34;the-resume&#34;&gt;The Resume&lt;/h2&gt;
&lt;p&gt;We&amp;rsquo;re going to be building out a resume. Simple enough, yeah? Well, in premise, yes. The goal of a resume is simply to give an overview of your experience and skillset, and to start a conversation with a team to see if you can be productive together.&lt;/p&gt;
&lt;p&gt;This project will do more than list a few keywords and try to convince a recruiter that you can bring value to their clients. I want something I can show off. I want a set of code I can be proud of to put on my public github profile. I need something I can use to play with new tech. Ever see a new tool and think &amp;ldquo;I wish I had something I could use that in&amp;rdquo;? Why not take something simple and completely over-engineer it instead?&lt;/p&gt;
&lt;h2 id=&#34;the-plan&#34;&gt;The Plan&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ll be building out the Over-Engineered Resume in a series of blog posts. I&amp;rsquo;ll be using the project to demonstrate techniques that I use in my work. Follow along, and show off your skills with me!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>NFS Mounts in Linux Filesystems</title>
      <link>https://jeffstagg.github.io/posts/220816-nfsmounts/</link>
      <pubDate>Tue, 16 Aug 2022 18:49:01 +0200</pubDate>
      
      <guid>https://jeffstagg.github.io/posts/220816-nfsmounts/</guid>
      <description>Mounting NFS in Manjaro Linux Ensure you&amp;rsquo;ve got nfs-utils installed to mount drive. Then create folder and add entry to /etc/fstab
$&amp;gt; pamac build nfs-utils$&amp;gt; sudo mkdir /mnt/NFSDrive$&amp;gt; sudo nano /etc/fstab192.168.1.xx:/remote/path	/mnt/NFSDrive	nfs	defaults	0	0
Now mount your drive as root
$&amp;gt; sudo mount -t nfs 192.168.1.xx:/remote/path /mnt/NFSDriveUbuntu install nfs-common instead</description>
      <content>&lt;h1 id=&#34;mounting-nfs-in-manjaro-linux&#34;&gt;Mounting NFS in Manjaro Linux&lt;/h1&gt;
&lt;p&gt;Ensure you&amp;rsquo;ve got nfs-utils installed to mount drive. Then create folder and add entry to &lt;code&gt;/etc/fstab&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$&amp;gt; pamac build nfs-utils
$&amp;gt; sudo mkdir /mnt/NFSDrive
$&amp;gt; sudo nano /etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;192.168.1.xx:/remote/path	/mnt/NFSDrive	nfs	defaults	0	0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now mount your drive as root&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$&amp;gt; sudo mount -t nfs 192.168.1.xx:/remote/path /mnt/NFSDrive
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;ubuntu&#34;&gt;Ubuntu&lt;/h2&gt;
&lt;p&gt;install &lt;code&gt;nfs-common&lt;/code&gt; instead&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Network&#43; Study Notes</title>
      <link>https://jeffstagg.github.io/posts/220517-network-plus/</link>
      <pubDate>Tue, 17 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jeffstagg.github.io/posts/220517-network-plus/</guid>
      <description>Background I&amp;rsquo;m studying for the CompTIA Network+ N10-008 exam. There&amp;rsquo;s a LOT of material, so I&amp;rsquo;ll use this page to organize notes on what I used to study, how I went about it, and helpful charts I&amp;rsquo;ll use to memorize the needful.
When I was in high school, I took a Cisco certification course. We offered it as an elective at our school to try to get more kids into tech.</description>
      <content>&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m studying for the CompTIA Network+ N10-008 exam. There&amp;rsquo;s a LOT of material, so I&amp;rsquo;ll
use this page to organize notes on what I used to study, how I went about it, and
helpful charts I&amp;rsquo;ll use to memorize the needful.&lt;/p&gt;
&lt;p&gt;When I was in high school, I took a Cisco certification course. We offered it as an elective at our school to
try to get more kids into tech. It took a whole year for the Networking 1 and 2 class, and at the end, you were supposedly able to
take your CCNA and go on to be a network tech right out of high school. The course wasn&amp;rsquo;t great, but I did learn to configure a router,
build patch cables, etc.&lt;/p&gt;
&lt;p&gt;I also moved into a house with no previous network infrastructure last year, so I had the joy of running cable through walls and my attic already,
terminating ends and testing all my connections. I&amp;rsquo;m building a Lack Rack at the moment to host my patch panel, router, switch, and other goodies that make up my home network.&lt;/p&gt;
&lt;h2 id=&#34;materials&#34;&gt;Materials&lt;/h2&gt;
&lt;p&gt;No links seen here are affiliate links.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.amazon.com/CompTIA-Network-Guide-Sixth-N10-006/dp/0071848223/&#34;&gt;All-In-One Network+ Book&lt;/a&gt; - Mike Meyers - I used the N10-006 version because it was only $8 used, and I&amp;rsquo;ll make up the updated info by buying Meyers&amp;rsquo; Udemy course
&lt;a href=&#34;https://www.udemy.com/course/total-comptia-network-n10-008/&#34;&gt;TOTAL: CompTIA Network+ (N10-008)&lt;/a&gt; - Mike Meyers, Joe Ramm - For those that don&amp;rsquo;t like
to read, you can listen to the soothing voices of Mike Meyers and Joe Ramm whisper sweet subnetting into your ears. This is basically just a narration of the Network+ book.
&lt;a href=&#34;https://www.udemy.com/course/comptia-network-008-exams/&#34;&gt;CompTIA Network+ (N10-008) 6 Practice Exams&lt;/a&gt; - Jason Dion
&lt;a href=&#34;https://www.professormesser.com/network-plus/n10-008/n10-008-video/n10-008-training-course/&#34;&gt;Professor Messer&amp;rsquo;s CompTIA N10-008 Network+ Course&lt;/a&gt; - Professor Messer offers a free video training course. He goes in a different order than Meyers, so I&amp;rsquo;m saving his stuff for after Meyers&amp;rsquo; training
&lt;a href=&#34;https://www.youtube.com/user/sunnylearning/videos&#34;&gt;Sunny Learning&lt;/a&gt; - Sunny has some interesting information on his channel and explains in a way that is easy to work with. Check out his &lt;a href=&#34;https://www.youtube.com/watch?v=ecCuyq-Wprc&#34;&gt;&amp;ldquo;Subnetting Is Simple&amp;rdquo; video&lt;/a&gt;.
&lt;a href=&#34;https://ankiweb.net/&#34;&gt;Anki&lt;/a&gt; - Anki is open-source software that helps you memorize things with flash cards. I found &lt;a href=&#34;https://ankiweb.net/shared/info/161585723&#34;&gt;this Network+ Starter Set deck&lt;/a&gt; and will be using these cards until I develop my own, based on what I&amp;rsquo;m lagging behind in. I may not need to make my own, we&amp;rsquo;ll see how the practice exams go.
&lt;a href=&#34;https://f-droid.org/en/packages/com.ichi2.anki/&#34;&gt;AnkiDroid&lt;/a&gt; - Android app for Anki.&lt;/p&gt;
&lt;p&gt;Note: The Udemy courses sound expensive until you browse the Udemy site for a little while. Their courses go on &amp;ldquo;sale&amp;rdquo;, and the courses that all say they&amp;rsquo;re $100-200 are actually about $12 or so at other times. I paid $13 for the two Udemy courses, and at the time I&amp;rsquo;m writing this post to grab links, they&amp;rsquo;re on sale for $9.99. Don&amp;rsquo;t get impatient, just give it a week if they&amp;rsquo;re not on sale right now. Start with the book anyway.&lt;/p&gt;
&lt;h2 id=&#34;strategy&#34;&gt;Strategy&lt;/h2&gt;
&lt;p&gt;The way I learn best is to read, then think about or discuss what I&amp;rsquo;ve read, then put it into practice. With the materials I&amp;rsquo;ve got available,
I&amp;rsquo;m reading a chapter in the All In One book, then watching the corresponding video in Meyers&amp;rsquo; video course. This helps me to hear it explained, sometimes in a different way, and helps me to solidify what I&amp;rsquo;ve read. Once I&amp;rsquo;ve made it through the book and videos, I&amp;rsquo;ll take a practice exam and see how I do. If I make above a 70%, I&amp;rsquo;ll go ahead and schedule my exam for 1 month out and continue my studies. If I make below a 70%, I&amp;rsquo;ll schedule it for 2 months out. The test isn&amp;rsquo;t cheap, so I only want to have to take it once.&lt;/p&gt;
&lt;p&gt;Next I&amp;rsquo;ll go through the exam objectives and see if there&amp;rsquo;s anywhere I feel like I&amp;rsquo;m lacking. Based on where I did poorly on the practice exams, I&amp;rsquo;ll focus on areas I felt weakest. It may help to go through some of Professor Messer&amp;rsquo;s videos and Sunny&amp;rsquo;s videos on some topics as well. Every week leading up to the exam, I&amp;rsquo;ll take a practice exam to develop a rhythm.&lt;/p&gt;
&lt;h3 id=&#34;osi-model&#34;&gt;OSI Model&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;7 Application&lt;/li&gt;
&lt;li&gt;6 Presentation&lt;/li&gt;
&lt;li&gt;5 Session&lt;/li&gt;
&lt;li&gt;4 Transport&lt;/li&gt;
&lt;li&gt;3 Network&lt;/li&gt;
&lt;li&gt;2 Data Link&lt;/li&gt;
&lt;li&gt;1 Physical&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;subnetting&#34;&gt;Subnetting&lt;/h3&gt;
&lt;h3 id=&#34;802s&#34;&gt;802&amp;rsquo;s&lt;/h3&gt;
&lt;h3 id=&#34;cables&#34;&gt;Cables&lt;/h3&gt;
&lt;h3 id=&#34;ports&#34;&gt;Ports&lt;/h3&gt;
&lt;h3 id=&#34;ipv4-classes&#34;&gt;IPv4 Classes&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Class&lt;/th&gt;
&lt;th&gt;IP Range&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;1 - 126&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;128 - 191&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;192 - 223&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;D&lt;/td&gt;
&lt;td&gt;224 - 239&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;E&lt;/td&gt;
&lt;td&gt;240 - 254&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    </item>
    
    <item>
      <title>Deploying Hugo Site to Azure with Bicep</title>
      <link>https://jeffstagg.github.io/posts/220515-bicep-azure-hugo/</link>
      <pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jeffstagg.github.io/posts/220515-bicep-azure-hugo/</guid>
      <description>When in doubt, over-engineer I ran into a bit of a delimma. I want to automate a deployment using infrastructure as code, but I don&amp;rsquo;t have a project to use it on. So I thought, &amp;ldquo;why not over-engineer a blog?&amp;rdquo; So that&amp;rsquo;s what this is.
I&amp;rsquo;ve got a few goals for this project:
 Start a blog, a place to put thoughts Have a collection of code snippets and neat projects to show off Use aBicep to deploy a collection of services to Azure Test out the Static Website service in Azure Demonstrate continuous integration  Code snippets:</description>
      <content>&lt;h2 id=&#34;when-in-doubt-over-engineer&#34;&gt;When in doubt, over-engineer&lt;/h2&gt;
&lt;p&gt;I ran into a bit of a delimma. I want to automate a deployment using infrastructure as code, but I don&amp;rsquo;t have a project to use it on. So I thought, &amp;ldquo;why not over-engineer a blog?&amp;rdquo; So that&amp;rsquo;s what this is.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve got a few goals for this project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start a blog, a place to put thoughts&lt;/li&gt;
&lt;li&gt;Have a collection of code snippets and neat projects to show off&lt;/li&gt;
&lt;li&gt;Use aBicep to deploy a collection of services to Azure&lt;/li&gt;
&lt;li&gt;Test out the Static Website service in Azure&lt;/li&gt;
&lt;li&gt;Demonstrate continuous integration&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Code snippets:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## this is a comment
$ echo this is a command
this is a command

## edit the file
$ vi foo.md
+++
date = &amp;quot;2014-09-28&amp;quot;
title = &amp;quot;creating a new theme&amp;quot;
+++

bah and humbug
:wq
ntew test


## show it
$ cat foo.md
+++
date = &amp;quot;2014-09-28&amp;quot;
title = &amp;quot;creating a new theme&amp;quot;
+++

bah and humbug
$
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;some-definitions&#34;&gt;Some Definitions&lt;/h2&gt;
&lt;p&gt;There are a few concepts that you need to understand before creating a theme.&lt;/p&gt;
&lt;h3 id=&#34;skins&#34;&gt;Skins&lt;/h3&gt;
&lt;p&gt;Skins are the files responsible for the look and feel of your site. It’s the CSS that controls colors and fonts, it’s the Javascript that determines actions and reactions. It’s also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.&lt;/p&gt;
&lt;p&gt;You have two ways to create a skin. The simplest way is to create it in the &lt;code&gt;layouts/&lt;/code&gt; directory. If you do, then you don’t have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the &lt;code&gt;layouts/&lt;/code&gt; directory so it will always find the skin.&lt;/p&gt;
&lt;p&gt;Your second choice is to create it in a sub-directory of the &lt;code&gt;themes/&lt;/code&gt; directory. If you do, then you must always tell Hugo where to search for the skin. It’s extra work, though, so why bother with it?&lt;/p&gt;
&lt;p&gt;The difference between creating a skin in &lt;code&gt;layouts/&lt;/code&gt; and creating it in &lt;code&gt;themes/&lt;/code&gt; is very subtle. A skin in &lt;code&gt;layouts/&lt;/code&gt; can’t be customized without updating the templates and static files that it is built from. A skin created in &lt;code&gt;themes/&lt;/code&gt;, on the other hand, can be and that makes it easier for other people to use it.&lt;/p&gt;
&lt;p&gt;The rest of this tutorial will call a skin created in the &lt;code&gt;themes/&lt;/code&gt; directory a theme.&lt;/p&gt;
&lt;p&gt;Note that you can use this tutorial to create a skin in the &lt;code&gt;layouts/&lt;/code&gt; directory if you wish to. The main difference will be that you won’t need to update the site’s configuration file to use a theme.&lt;/p&gt;
&lt;h3 id=&#34;the-home-page&#34;&gt;The Home Page&lt;/h3&gt;
&lt;p&gt;The home page, or landing page, is the first page that many visitors to a site see. It is the index.html file in the root directory of the web site. Since Hugo writes files to the public/ directory, our home page is public/index.html.&lt;/p&gt;
&lt;h3 id=&#34;site-configuration-file&#34;&gt;Site Configuration File&lt;/h3&gt;
&lt;p&gt;When Hugo runs, it looks for a configuration file that contains settings that override default values for the entire site. The file can use TOML, YAML, or JSON. I prefer to use TOML for my configuration files. If you prefer to use JSON or YAML, you’ll need to translate my examples. You’ll also need to change the name of the file since Hugo uses the extension to determine how to process it.&lt;/p&gt;
&lt;p&gt;Hugo translates Markdown files into HTML. By default, Hugo expects to find Markdown files in your &lt;code&gt;content/&lt;/code&gt; directory and template files in your &lt;code&gt;themes/&lt;/code&gt; directory. It will create HTML files in your &lt;code&gt;public/&lt;/code&gt; directory. You can change this by specifying alternate locations in the configuration file.&lt;/p&gt;
&lt;h3 id=&#34;content&#34;&gt;Content&lt;/h3&gt;
&lt;p&gt;Content is stored in text files that contain two sections. The first section is the “front matter,” which is the meta-information on the content. The second section contains Markdown that will be converted to HTML.&lt;/p&gt;
&lt;h4 id=&#34;front-matter&#34;&gt;Front Matter&lt;/h4&gt;
&lt;p&gt;The front matter is information about the content. Like the configuration file, it can be written in TOML, YAML, or JSON. Unlike the configuration file, Hugo doesn’t use the file’s extension to know the format. It looks for markers to signal the type. TOML is surrounded by “&lt;code&gt;+++&lt;/code&gt;”, YAML by “&lt;code&gt;---&lt;/code&gt;”, and JSON is enclosed in curly braces. I prefer to use TOML, so you’ll need to translate my examples if you prefer YAML or JSON.&lt;/p&gt;
&lt;p&gt;The information in the front matter is passed into the template before the content is rendered into HTML.&lt;/p&gt;
&lt;h4 id=&#34;markdown&#34;&gt;Markdown&lt;/h4&gt;
&lt;p&gt;Content is written in Markdown which makes it easier to create the content. Hugo runs the content through a Markdown engine to create the HTML which will be written to the output file.&lt;/p&gt;
&lt;h3 id=&#34;template-files&#34;&gt;Template Files&lt;/h3&gt;
&lt;p&gt;Hugo uses template files to render content into HTML. Template files are a bridge between the content and presentation. Rules in the template define what content is published, where it&amp;rsquo;s published to, and how it will rendered to the HTML file. The template guides the presentation by specifying the style to use.&lt;/p&gt;
&lt;p&gt;There are three types of templates: single, list, and partial. Each type takes a bit of content as input and transforms it based on the commands in the template.&lt;/p&gt;
&lt;p&gt;Hugo uses its knowledge of the content to find the template file used to render the content. If it can’t find a template that is an exact match for the content, it will shift up a level and search from there. It will continue to do so until it finds a matching template or runs out of templates to try. If it can’t find a template, it will use the default template for the site.&lt;/p&gt;
&lt;p&gt;Please note that you can use the front matter to influence Hugo’s choice of templates.&lt;/p&gt;
&lt;h4 id=&#34;single-template&#34;&gt;Single Template&lt;/h4&gt;
&lt;p&gt;A single template is used to render a single piece of content. For example, an article or post would be a single piece of content and use a single template.&lt;/p&gt;
&lt;h4 id=&#34;list-template&#34;&gt;List Template&lt;/h4&gt;
&lt;p&gt;A list template renders a group of related content. That could be a summary of recent postings or all articles in a category. List templates can contain multiple groups.&lt;/p&gt;
&lt;p&gt;The homepage template is a special type of list template. Hugo assumes that the home page of your site will act as the portal for the rest of the content in the site.&lt;/p&gt;
&lt;h4 id=&#34;partial-template&#34;&gt;Partial Template&lt;/h4&gt;
&lt;p&gt;A partial template is a template that can be included in other templates. Partial templates must be called using the “partial” template command. They are very handy for rolling up common behavior. For example, your site may have a banner that all pages use. Instead of copying the text of the banner into every single and list template, you could create a partial with the banner in it. That way if you decide to change the banner, you only have to change the partial template.&lt;/p&gt;
&lt;h2 id=&#34;create-a-new-site&#34;&gt;Create a New Site&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s use Hugo to create a new web site. I&amp;rsquo;m a Mac user, so I&amp;rsquo;ll create mine in my home directory, in the Sites folder. If you&amp;rsquo;re using Linux, you might have to create the folder first.&lt;/p&gt;
&lt;p&gt;The &amp;ldquo;new site&amp;rdquo; command will create a skeleton of a site. It will give you the basic directory structure and a useable configuration file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo new site ~/Sites/zafta
$ cd ~/Sites/zafta
$ ls -l
total 8
drwxr-xr-x  7 quoha  staff  238 Sep 29 16:49 .
drwxr-xr-x  3 quoha  staff  102 Sep 29 16:49 ..
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 archetypes
-rw-r--r--  1 quoha  staff   82 Sep 29 16:49 config.toml
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 content
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 layouts
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 static
$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Take a look in the content/ directory to confirm that it is empty.&lt;/p&gt;
&lt;p&gt;The other directories (archetypes/, layouts/, and static/) are used when customizing a theme. That&amp;rsquo;s a topic for a different tutorial, so please ignore them for now.&lt;/p&gt;
&lt;h3 id=&#34;generate-the-html-for-the-new-site&#34;&gt;Generate the HTML For the New Site&lt;/h3&gt;
&lt;p&gt;Running the &lt;code&gt;hugo&lt;/code&gt; command with no options will read all the available content and generate the HTML files. It will also copy all static files (that&amp;rsquo;s everything that&amp;rsquo;s not content). Since we have an empty site, it won&amp;rsquo;t do much, but it will do it very quickly.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo --verbose
INFO: 2014/09/29 Using config file: config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
WARN: 2014/09/29 Unable to locate layout: [404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 2 ms
$ 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &amp;ldquo;&lt;code&gt;--verbose&lt;/code&gt;&amp;rdquo; flag gives extra information that will be helpful when we build the template. Every line of the output that starts with &amp;ldquo;INFO:&amp;rdquo; or &amp;ldquo;WARN:&amp;rdquo; is present because we used that flag. The lines that start with &amp;ldquo;WARN:&amp;rdquo; are warning messages. We&amp;rsquo;ll go over them later.&lt;/p&gt;
&lt;p&gt;We can verify that the command worked by looking at the directory again.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ls -l
total 8
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 archetypes
-rw-r--r--  1 quoha  staff   82 Sep 29 16:49 config.toml
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 content
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 layouts
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:02 public
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 static
$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;See that new public/ directory? Hugo placed all generated content there. When you&amp;rsquo;re ready to publish your web site, that&amp;rsquo;s the place to start. For now, though, let&amp;rsquo;s just confirm that we have what we&amp;rsquo;d expect from a site with no content.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ls -l public
total 16
-rw-r--r--  1 quoha  staff  416 Sep 29 17:02 index.xml
-rw-r--r--  1 quoha  staff  262 Sep 29 17:02 sitemap.xml
$ 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Hugo created two XML files, which is standard, but there are no HTML files.&lt;/p&gt;
&lt;h3 id=&#34;test-the-new-site&#34;&gt;Test the New Site&lt;/h3&gt;
&lt;p&gt;Verify that you can run the built-in web server. It will dramatically shorten your development cycle if you do. Start it by running the &amp;ldquo;server&amp;rdquo; command. If it is successful, you will see output similar to the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo server --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
WARN: 2014/09/29 Unable to locate layout: [404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 2 ms
Serving pages from /Users/quoha/Sites/zafta/public
Web Server is available at http://localhost:1313
Press Ctrl+C to stop
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Connect to the listed URL (it&amp;rsquo;s on the line that starts with &amp;ldquo;Web Server&amp;rdquo;). If everything is working correctly, you should get a page that shows the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;index.xml
sitemap.xml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That&amp;rsquo;s a listing of your public/ directory. Hugo didn&amp;rsquo;t create a home page because our site has no content. When there&amp;rsquo;s no index.html file in a directory, the server lists the files in the directory, which is what you should see in your browser.&lt;/p&gt;
&lt;p&gt;Let’s go back and look at those warnings again.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
WARN: 2014/09/29 Unable to locate layout: [404.html]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That second warning is easier to explain. We haven’t created a template to be used to generate “page not found errors.” The 404 message is a topic for a separate tutorial.&lt;/p&gt;
&lt;p&gt;Now for the first warning. It is for the home page. You can tell because the first layout that it looked for was “index.html.” That’s only used by the home page.&lt;/p&gt;
&lt;p&gt;I like that the verbose flag causes Hugo to list the files that it&amp;rsquo;s searching for. For the home page, they are index.html, _default/list.html, and _default/single.html. There are some rules that we&amp;rsquo;ll cover later that explain the names and paths. For now, just remember that Hugo couldn&amp;rsquo;t find a template for the home page and it told you so.&lt;/p&gt;
&lt;p&gt;At this point, you&amp;rsquo;ve got a working installation and site that we can build upon. All that’s left is to add some content and a theme to display it.&lt;/p&gt;
&lt;h2 id=&#34;create-a-new-theme&#34;&gt;Create a New Theme&lt;/h2&gt;
&lt;p&gt;Hugo doesn&amp;rsquo;t ship with a default theme. There are a few available (I counted a dozen when I first installed Hugo) and Hugo comes with a command to create new themes.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re going to create a new theme called &amp;ldquo;zafta.&amp;rdquo; Since the goal of this tutorial is to show you how to fill out the files to pull in your content, the theme will not contain any CSS. In other words, ugly but functional.&lt;/p&gt;
&lt;p&gt;All themes have opinions on content and layout. For example, Zafta uses &amp;ldquo;post&amp;rdquo; over &amp;ldquo;blog&amp;rdquo;. Strong opinions make for simpler templates but differing opinions make it tougher to use themes. When you build a theme, consider using the terms that other themes do.&lt;/p&gt;
&lt;h3 id=&#34;create-a-skeleton&#34;&gt;Create a Skeleton&lt;/h3&gt;
&lt;p&gt;Use the hugo &amp;ldquo;new&amp;rdquo; command to create the skeleton of a theme. This creates the directory structure and places empty files for you to fill out.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo new theme zafta

$ ls -l
total 8
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 archetypes
-rw-r--r--  1 quoha  staff   82 Sep 29 16:49 config.toml
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 content
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 layouts
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:02 public
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 static
drwxr-xr-x  3 quoha  staff  102 Sep 29 17:31 themes

$ find themes -type f | xargs ls -l
-rw-r--r--  1 quoha  staff  1081 Sep 29 17:31 themes/zafta/LICENSE.md
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/archetypes/default.md
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/_default/list.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/_default/single.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/index.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/partials/header.html
-rw-r--r--  1 quoha  staff    93 Sep 29 17:31 themes/zafta/theme.toml
$ 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The skeleton includes templates (the files ending in .html), license file, a description of your theme (the theme.toml file), and an empty archetype.&lt;/p&gt;
&lt;p&gt;Please take a minute to fill out the theme.toml and LICENSE.md files. They&amp;rsquo;re optional, but if you&amp;rsquo;re going to be distributing your theme, it tells the world who to praise (or blame). It&amp;rsquo;s also nice to declare the license so that people will know how they can use the theme.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/theme.toml
author = &amp;quot;michael d henderson&amp;quot;
description = &amp;quot;a minimal working template&amp;quot;
license = &amp;quot;MIT&amp;quot;
name = &amp;quot;zafta&amp;quot;
source_repo = &amp;quot;&amp;quot;
tags = [&amp;quot;tags&amp;quot;, &amp;quot;categories&amp;quot;]
:wq

## also edit themes/zafta/LICENSE.md and change
## the bit that says &amp;quot;YOUR_NAME_HERE&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that the the skeleton&amp;rsquo;s template files are empty. Don&amp;rsquo;t worry, we&amp;rsquo;ll be changing that shortly.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ find themes/zafta -name &#39;*.html&#39; | xargs ls -l
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/_default/list.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/_default/single.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/index.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/partials/header.html
$
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;update-the-configuration-file-to-use-the-theme&#34;&gt;Update the Configuration File to Use the Theme&lt;/h3&gt;
&lt;p&gt;Now that we&amp;rsquo;ve got a theme to work with, it&amp;rsquo;s a good idea to add the theme name to the configuration file. This is optional, because you can always add &amp;ldquo;-t zafta&amp;rdquo; on all your commands. I like to put it the configuration file because I like shorter command lines. If you don&amp;rsquo;t put it in the configuration file or specify it on the command line, you won&amp;rsquo;t use the template that you&amp;rsquo;re expecting to.&lt;/p&gt;
&lt;p&gt;Edit the file to add the theme, add a title for the site, and specify that all of our content will use the TOML format.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vi config.toml
theme = &amp;quot;zafta&amp;quot;
baseurl = &amp;quot;&amp;quot;
languageCode = &amp;quot;en-us&amp;quot;
title = &amp;quot;zafta - totally refreshing&amp;quot;
MetaDataFormat = &amp;quot;toml&amp;quot;
:wq

$
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;generate-the-site&#34;&gt;Generate the Site&lt;/h3&gt;
&lt;p&gt;Now that we have an empty theme, let&amp;rsquo;s generate the site again.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 2 ms
$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Did you notice that the output is different? The warning message for the home page has disappeared and we have an additional information line saying that Hugo is syncing from the theme&amp;rsquo;s directory.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s check the public/ directory to see what Hugo&amp;rsquo;s created.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ls -l public
total 16
drwxr-xr-x  2 quoha  staff   68 Sep 29 17:56 css
-rw-r--r--  1 quoha  staff    0 Sep 29 17:56 index.html
-rw-r--r--  1 quoha  staff  407 Sep 29 17:56 index.xml
drwxr-xr-x  2 quoha  staff   68 Sep 29 17:56 js
-rw-r--r--  1 quoha  staff  243 Sep 29 17:56 sitemap.xml
$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Notice four things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Hugo created a home page. This is the file public/index.html.&lt;/li&gt;
&lt;li&gt;Hugo created a css/ directory.&lt;/li&gt;
&lt;li&gt;Hugo created a js/ directory.&lt;/li&gt;
&lt;li&gt;Hugo claimed that it created 0 pages. It created a file and copied over static files, but didn&amp;rsquo;t create any pages. That&amp;rsquo;s because it considers a &amp;ldquo;page&amp;rdquo; to be a file created directly from a content file. It doesn&amp;rsquo;t count things like the index.html files that it creates automatically.&lt;/li&gt;
&lt;/ol&gt;
</content>
    </item>
    
  </channel>
</rss>
